<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.naga.yulian.dao.AccountingMapper">
	<resultMap id="BaseResultMap" type="com.naga.yulian.entity.Accounting">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon May 16 
			17:07:43 CST 2016. -->
		<id column="uuid" property="uuid" jdbcType="CHAR" />
		<result column="topId" property="topid" jdbcType="CHAR" />
		<result column="userId" property="userid" jdbcType="CHAR" />
		<result column="createrId" property="createrid" jdbcType="CHAR" />
		<result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="currency" property="currency" jdbcType="INTEGER" />
		<result column="currencyBefore" property="currencybefore"
			jdbcType="INTEGER" />
		<result column="point" property="point" jdbcType="INTEGER" />
		<result column="pointBefore" property="pointbefore" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon May 16 
			17:07:43 CST 2016. -->
		uuid, topId, userId, createrId, createDate, type, currency,
		currencyBefore, point,
		pointBefore
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon May 16 
			17:07:43 CST 2016. -->
		select
		<include refid="Base_Column_List" />
		from accounting
		where uuid = #{uuid,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon May 16 
			17:07:43 CST 2016. -->
		delete from accounting
		where uuid = #{uuid,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.naga.yulian.entity.Accounting">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon May 16 
			17:07:43 CST 2016. -->
		insert into accounting (uuid, topId, userId, createrId,
		createDate, type, currency,
		currencyBefore, point, pointBefore
		)
		values (#{uuid,jdbcType=CHAR}, #{topid,jdbcType=CHAR},
		#{userid,jdbcType=CHAR}, #{createrid,jdbcType=CHAR},
		#{createdate,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER},
		#{currency,jdbcType=INTEGER},
		#{currencybefore,jdbcType=INTEGER}, #{point,jdbcType=INTEGER}, #{pointbefore,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.naga.yulian.entity.Accounting">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon May 16 
			17:07:43 CST 2016. -->
		insert into accounting
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uuid != null">
				uuid,
			</if>
			<if test="topid != null">
				topId,
			</if>
			<if test="userid != null">
				userId,
			</if>
			<if test="createrid != null">
				createrId,
			</if>
			<if test="createdate != null">
				createDate,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="currency != null">
				currency,
			</if>
			<if test="currencybefore != null">
				currencyBefore,
			</if>
			<if test="point != null">
				point,
			</if>
			<if test="pointbefore != null">
				pointBefore,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uuid != null">
				#{uuid,jdbcType=CHAR},
			</if>
			<if test="topid != null">
				#{topid,jdbcType=CHAR},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=CHAR},
			</if>
			<if test="createrid != null">
				#{createrid,jdbcType=CHAR},
			</if>
			<if test="createdate != null">
				#{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="currency != null">
				#{currency,jdbcType=INTEGER},
			</if>
			<if test="currencybefore != null">
				#{currencybefore,jdbcType=INTEGER},
			</if>
			<if test="point != null">
				#{point,jdbcType=INTEGER},
			</if>
			<if test="pointbefore != null">
				#{pointbefore,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.naga.yulian.entity.Accounting">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon May 16 
			17:07:43 CST 2016. -->
		update accounting
		<set>
			<if test="topid != null">
				topId = #{topid,jdbcType=CHAR},
			</if>
			<if test="userid != null">
				userId = #{userid,jdbcType=CHAR},
			</if>
			<if test="createrid != null">
				createrId = #{createrid,jdbcType=CHAR},
			</if>
			<if test="createdate != null">
				createDate = #{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="currency != null">
				currency = #{currency,jdbcType=INTEGER},
			</if>
			<if test="currencybefore != null">
				currencyBefore = #{currencybefore,jdbcType=INTEGER},
			</if>
			<if test="point != null">
				point = #{point,jdbcType=INTEGER},
			</if>
			<if test="pointbefore != null">
				pointBefore = #{pointbefore,jdbcType=INTEGER},
			</if>
		</set>
		where uuid = #{uuid,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.naga.yulian.entity.Accounting">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Mon May 16 
			17:07:43 CST 2016. -->
		update accounting
		set topId = #{topid,jdbcType=CHAR},
		userId = #{userid,jdbcType=CHAR},
		createrId = #{createrid,jdbcType=CHAR},
		createDate = #{createdate,jdbcType=TIMESTAMP},
		type = #{type,jdbcType=INTEGER},
		currency = #{currency,jdbcType=INTEGER},
		currencyBefore = #{currencybefore,jdbcType=INTEGER},
		point = #{point,jdbcType=INTEGER},
		pointBefore = #{pointbefore,jdbcType=INTEGER}
		where uuid = #{uuid,jdbcType=CHAR}
	</update>
</mapper>