<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/aop
		 http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		 http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		 http://www.springframework.org/schema/task
		 http://www.springframework.org/schema/task/spring-task-3.0.xsd
		 ">
	<task:scheduled-tasks>
		<task:scheduled ref="taskJob" method="job" cron="0 0 0 * * ?" />
	</task:scheduled-tasks>

	<!--与axis2的整合，配置 applicationContext与对外开放的service -->
	<bean id="applicationContext"
		class="org.apache.axis2.extensions.spring.receivers.ApplicationContextHolder" />

	<!-- 引入properties属性文件 -->
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:dbconfig.properties</value>
				<value>classpath:systemconfig.properties</value>
			</list>
		</property>
	</bean>

	<!-- 自动扫描(自动注入)，扫描这个包以及它的子包的所有使用@Service注解标注的类 -->
	<context:component-scan base-package="com.naga.**.service" />

	<!-- 添加调度的任务bean 配置对应的class -->
	<bean id="tokenManager" class="com.naga.common.util.TokenManager" />

	<!-- 自定义Spring的工具类，用来获得配置文件中的bean -->
	<bean id="springUtils" class="com.naga.common.util.SpringContextUtil" />

	<!-- Spring的工具类，用来获得properties配置文件中的property信息 -->
	<bean id="systemConfigUtil" class="com.naga.common.util.SystemConfigUtil" />
	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/* -->
			<mvc:mapping path="/**" />
			<ref bean="customInstructionFilter" />
		</mvc:interceptor>
	</mvc:interceptors>



	<bean id="customInstructionFilter" class="com.naga.common.filter.CustomInstructionFilter">
	</bean>
</beans>